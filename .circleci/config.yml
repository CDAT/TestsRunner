version: 2

checkout:
  post:
    - ./ci-support/checkout_merge_commit.sh

aliases:
  - &setup_miniconda
    name: setup_miniconda
    command: |
      mkdir -p workspace
      git clone -b validateNightly git@github.com:CDAT/cdat workspace/cdat
      python workspace/cdat/scripts/install_miniconda.py -w $WORKDIR -p 'py3'

  - &setup_testsrunner
    name: setup_testsrunner
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export UVCDAT_ANONYMOUS_LOG=False
       source activate base
       python setup.py install

  - &run_tests
    name: run_tests
    command: |
       export PATH=$WORKDIR/miniconda/bin:$PATH
       export UVCDAT_ANONYMOUS_LOG=False
       export UVCDAT_SETUP_PATH=${HOME}
       source activate py2
       python run_tests.py -H -v2 -n 2
       RESULT=$?
       echo "*** py2 test result: "${RESULT} 
       source activate py3
       python run_tests.py -H -n 2
       PY3_RESULT=$?
       echo "**** py3 test result: "${PY3_RESULT}
       RESULT=$(( $RESULT + $PY3_RESULT))
       exit $RESULT


  - &conda_upload
    name: conda_upload
    command: |
       if [[ $CIRCLE_BRANCH != 'master' ]]; then
          exit 0
       fi
       export PATH=${HOME}/project/$WORKDIR/miniconda/bin:$PATH
       conda install conda-build anaconda-client
       conda config --set anaconda_upload no
       export CONDA_BLD_PATH=`pwd`/conda_build
       git clone git://github.com/cdat/conda-recipes
       cd conda-recipes
       export PKG_NAME=testsrunner
       export USER=cdat
       export VERSION=8.0
       export LABEL=nightly
       python ./prep_for_build.py -l $VERSION
       conda build $PKG_NAME -c cdat/label/nightly -c conda-forge -c cdat --python=2.7
       conda build $PKG_NAME -c cdat/label/nightly -c conda-forge -c cdat --python=3.6
       anaconda -t $CONDA_UPLOAD_TOKEN upload -u $USER -l $LABEL $CONDA_BLD_PATH/$OS/$PKG_NAME-$VERSION.`date +%Y*`0.tar.bz2 --force

jobs:
  macos_testsrunner:
    macos:
      xcode: "9.2.0"
    environment:
      WORKDIR: "workspace/test_macos_testsrunner"
      OS: "osx-64"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *setup_testsrunner
      - run: *run_tests
      - run: *conda_upload
      - store_artifacts:
          path: tests_html
          destination: tests_html
      - store_artifacts:
          path: tests_png
          destination: tests_png

  linux_testsrunner:
    machine:
      image: circleci/classic:latest
    environment:
      WORKDIR: "workspace/test_linux_testsrunner"
      OS: "linux-64"
    steps:
      - checkout
      - run: *setup_miniconda
      - run: *setup_testsrunner
      - run: *run_tests
      - run: *conda_upload
      - store_artifacts:
          path: tests_html
          destination: tests_html
      - store_artifacts:
          path: tests_png
          destination: tests_png


workflows:
  version: 2
  testsrunner:
    jobs:
      - macos_testsrunner
      - linux_testsrunner
